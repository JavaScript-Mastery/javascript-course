[00:00:00]
>> Will Sentance: So folk, there it is, amazing work over the last two days. Enormous gratitude to every single person that I called upon the whole way through. Who knows if you knew that was coming. But my goodness if you did not know, [LAUGH] what a ride it's been. But it's been an absolute pleasure.

[00:00:17]
We went through, let's briefly sum it up. We went through the underlying principles of JavaScript that you saw, they never went away. [LAUGH] They were at bedrock. We then saw an interesting piece that makes up a core part of functional programming, our higher order functions, that ability to leave a placeholder for some functionality in a function and then only determine the functionality fully once we run the function and that's pretty nice, part of functional programming.

[00:00:45]
Or maybe I'll even say actually where you can take these things. If you wanna learn more about that, because there's a ton of functions you can edit, particularly the most powerful one of all, reduce, pretty beautiful actually, all in the functional programming Hall parts. I'll give you some little follow on things here.

[00:01:02]
Then we solve what for me is the most beautiful feature of JavaScript, cuz it's like the kinda, wow, if I get that, I truly get JavaScript's execution model. The idea that a function could in fact return saved code into another global label and that that's gonna bring data with it on his backpack that we then have access to for the rest of time, permanently, you will discover you can use that everywhere.

[00:01:26]
That dominates jobs without us even knowing. Then we saw Asynchronous JavaScript in the event loop. This is something I'd love to do a deeper dive like we saw the whole model of asynchronous JavaScript, well, honestly, we went way beyond JavaScript. It was JavaScript running in the web browsers, so we had to bring in all the other stuff down here that JavaScript gives us access to.

[00:01:47]
And they have a bunch of rules for how that stuff when it finishes in the web browser, like speaking to the Internet old timers, allows its associated functionality that it's gonna run on completion. And the data that maybe came back from that background work, back into JavaScript. There's some follow on things from that around things like chaining promises, other areas, constructing promises from scratch yourself.

[00:02:08]
But interesting to follow on into. And then finally, we saw here classes, prototypes, the prototype chain, the proto property that is not the prototype property, [LAUGH] but does link to the prototype property. We saw how new and clause are not changing anything under the hood besides automating and giving us a shorthand way of achieving what we achieved directly with object.create, manually fine-grained control in our solution two.

[00:02:39]
We saw that this keyword and all the interesting, or the two interesting ways that it works out. We saw how arrow functions can give us even more control over that, this keyword, and took us all the way through to the final part, which was building out class from scratch using all of these pieces under the hood.

[00:03:00]
So folk, it's been an absolute pleasure. I've loved doing this with all of you. I think that is it. Let's say we're a wrap, 5:30, we did it. It's been a pleasure. We will see you all [LAUGH] one day again. Thank you everybody and cheers.
>> Speaker 2: Great. [APPLAUSE]

